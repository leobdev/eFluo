@model eFluo.Models.ViewModels.AssignDeveloperViewModel
@using eFluo.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using eFluo.Models.Enums

@inject IPSBadgeService BadgeService
@inject IPSProjectService ProjectService
@inject UserManager<PSUser> UserManager
@inject IPSTicketService TicketService




<div class="container-fluid">



    <div class="row mb-3">

        <div class="card md-3 statbox widget box box-shadow col-xl-6 col-lg-6 col-sm-12 layout-spacing">
            <div class=" col widget-content widget-content-area">

                <h5 class="control-label">Assign developer for</h5>

                <h5>

                    @Model.Ticket.Project.Name
                </h5>

                <form method="post" asp-action="AssignDeveloper" asp-controller="Tickets">
                    <input asp-for="Ticket.Id" hidden />

                    <div class="form-group">
                        <label class="col-form-label">Select Developers</label>

                        <select required asp-for="DeveloperId" class="form-control" asp-items="@Model.Developers">
                            <option></option>
                        </select>
                    </div>
                    <div class="form-group mt-3">
                        <input type="submit" value="Assign" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
        <br />


        <div class="card ml-3 statbox offset widget box box-shadow col-xl-4 col-lg-4 col-sm-12 layout-spacing">


            <h5>@Model.Ticket.Title</h5>
            <p>@Model.Ticket.Description</p>

            <div class="card-body">
                <div class="progress-container progress-info m-b-25">
                    <br />
                    <span class="progress-badge" style="font-size:small"><strong>Project Status</strong></span>
                    <div class="progress">
                        @* Razor code block *@
                        @{
                            var start = Model.Ticket.Project.StartDate.DateTime;
                            var end = Model.Ticket.Project.EndDate.DateTime;
                            var today = DateTime.Now;
                            var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                        }

                        <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                            @* Use Progress Bar code variable here *@
                            <span class="progress-value">@percent%</span>
                        </div>
                    </div>
                    <p>Project: <strong>@Model.Ticket.Project.Name</strong></p>
                </div>

            </div>
        </div>

    </div>

    <div class="row mb-3">


        <div class="card md-3 statbox widget box box-shadow col-xl-6 col-lg-6 col-sm-12 layout-spacing">
            <div class=" col widget-content widget-content-area">

                <h5>Current Developer</h5>
            </div>

            <br />

            @{
                var dev = await TicketService.GetTicketDeveloperAsync(Model.Ticket.Id, Model.Ticket.Project.CompanyId.Value);
            }



            <div class="row">
                @if (dev.Projects is not null)
                {
                    <div class=" col widget-content widget-content-area">



                        @if (dev.AvatarFileData != null)
                        {
                            <img class="rounded-circle align-content-center" src="data/image/*;base64,@Convert.ToBase64String(dev.AvatarFileData)" alt="" />
                        }
                        else
                        {
                            <img class="rounded-circle" style="width:160px;height:160px" src="/img/avatardefault_92824.png" alt="" />

                        }





                    </div>

                    <div class="col">
                        @if (dev.Projects is not null)
                        {
                            <h4>
                                @dev.FullName
                            </h4>

                            <hr />
                            <p>@dev.Email</p>

                        }


                    </div>

                }
                else
                {
                    <div class="col">
                        <h6>No developer has been assigned.</h6>

                    </div>
                }



            </div>

        </div>
        <br />


        <div class="card statbox ml-3 widget box box-shadow col-xl-4 col-lg-4 col-sm-12 layout-spacing">
            <div class="widget-content widget-content-area">

                <dl class="row">

                    <dd class="col-4">

                        Created:
                    </dd>

                    <dt class="col-8">
                        <span style="float:right;" class="btn btn-sm btn-outline-dark">@Model.Ticket.Created.ToString("dd MMM, yyyy") </span>
                    </dt>
                </dl>
                <dl class="row">
                    <dd class="col-4">
                        Project Deadline:
                    </dd>

                    <dt class="col-8">
                        <span style="float:right;" class="btn btn-sm btn-outline-dark justify-content-end">@Model.Ticket.Project.EndDate.ToString("dd MMM, yyyy")</span>

                    </dt>
                </dl>
                <dl class="row">
                    <dd class="col-4">
                        Priority:
                    </dd>

                    <dt class="col-8">
                        <span style="float:right;" class="badge @BadgeService.GetPriorityBadge(Model.Ticket.TicketPriority.Name) justify-content-end">@Model.Ticket.TicketPriority?.Name</span>
                    </dt>
                </dl>
                <dl class="row">
                    <dd class="col-4">
                        Status:
                    </dd>

                    <dt class="col-8">
                        <span style="float:right;" class="badge @BadgeService.GetStatusBadge(Model.Ticket.TicketStatus.Name) justify-content-end">@Model.Ticket.TicketStatus?.Name</span>
                    </dt>
                </dl>

            </div>


        </div>


    </div>
    <br />

</div>



